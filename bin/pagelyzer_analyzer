#! /usr/bin/ruby1.9.1
#-*- mode: ruby; encoding: utf-8 -*-

require_relative "../lib/pagelyzer_analyzer.rb"

def help
	usage
	puts "This tool is oriented to separate web pages into segments called blocks, based on the structural and visual properties"
end

def usage
	puts "USAGE: pagelyzer_analyzer --decorated-file=FILE [--output-file=FILE] [--pdoc=(0..10)] [--version] [--help]"
end
#parsing command-line options (TODO: add option parser)
if ARGV == []
	usage
	exit
end

source_file=""
output_file=""
pdoc=6
target_path=""

ARGV.each do |op|
	sop = op.split("=")
	source_file 	= sop[1] 		if sop[0] == "--decorated-file"
	output_file 	= sop[1] 		if sop[0] == "--output-file"
	pdoc 			= sop[1].to_i 	if sop[0] == "--pdoc"
	interactive 	= sop[1]=='yes' if sop[0] == "--interactive"
	use_database 	= sop[1]=='yes' if sop[0] == "--use-database"
	job_id 		= sop[1].to_i 	if sop[0] == "--db-job-id"
	browser_id 	= sop[1].to_i 	if sop[0] == "--db-browser-id"
	debug 			= sop[1]=='yes' if sop[0] == "--debug"
	if sop[0] == "--help"
		help
		exit
	end
	if sop[0] == "--version"
		puts "SCAPE Webpage Analyzer. Version 0.9"
		puts "UPMC - LIP6"
		exit
	end
end

unless output_file.nil?
	target_path = source_file.split("/")
	target_path.delete_at(target_path.size-1)
	target_path = target_path.join("/")+"/"
end


bom = BlockOMatic.new
bom.set_source_file(source_file)
bom.start

if output_file.empty?
	puts bom.to_xml
else
	File.open("#{output_file}",'w') {|x| x.puts bom.to_xml }
end

