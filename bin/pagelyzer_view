#! /usr/bin/ruby1.9.1
#-*- mode: ruby; encoding: utf-8 -*-

require "nokogiri"
require_relative "../lib/pagelyzer_item.rb"
require 'image_size'

def help
	usage
	puts "This tool is oriented to view a ViXML file"
end

def usage
	puts "USAGE: pagelyzer_view --vixml-file=FILE [--output-file=FILE] [--version] [--help]"
end

def svg_header(width,height)
<<EOS
<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
    "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"> 
     <!--xml:space="preserve"
     width="#{width}px" height="#{height}px"
     viewBox="0 0 #{width} #{height}"
     zoomAndPan="disable" -->
EOS
end

def svg_footer
	"</svg>"
end

def svg_image(left,top,width,height,href)
	href = "file://"+File.expand_path(File.join(File.dirname(".."), href))
	"<image x=\"#{left}\" y=\"#{top}\" width=\"#{width}\" height=\"#{height}\" xlink:href=\"#{href}\" preserveAspectRatio='none'/>\n"
end

def parse_geometry(node)
	ret={}
	ref = "#{node["ref"]}#{node["Ref"]}"
	pos = "#{node["pos"]}#{node["Pos"]}"
	if pos.strip == "" #es vips
		ret['left'] = 0
		ret['top'] = 0
		png = ImageSize.new(File.open($snapshot_file,'rb').read)
		ret['width'] = png.width
		ret['height'] = png.height
		return ret
	end
	a=pos.split(" ").collect{|e| e.split(":")[1]}
	if node.name == "Document"
		ret['left'] = 0
		ret['top'] = 0
		ret['width'] = a[0].to_i
		ret['height'] = a[1].to_i
	else
		ret['left'] = a[0].to_i
		ret['top'] = a[1].to_i
		ret['width'] = a[2].to_i
		ret['height'] = a[3].to_i
	end
	ret
end

def svg_polygon(c,ref=nil)
	s="<g>"
	s+="<rect x=\"#{c['left']}\" y=\"#{c['top']}\" width=\"#{c['width']}\" height=\"#{c['height']}\" style=\"fill:transparent;stroke:red;stroke-width:4;fill-opacity:0.1;stroke-opacity:0.9\"/>\n"
	s+="<text x=\"#{c['left']}\" y=\"#{c['top']+10}\">#{ref}</text>" unless ref.nil?
	s+="</g>"
	s
end

def traverse(node,parent,level)
	node.inner_html = node.inner_html.gsub(/\n/,'').strip
	$cont+=1
	current = Item.new(node,level,$cont,parent,false)
	$struc.push current
	unless node.children.empty? 
		node.children.each do |child|
			if child.text?
				if child.content.strip != ""
					$cont+=1
					$struc.push Item.new(child,level,$cont,current,false)
				end
			else
				traverse(child,current,level+1) 
			end
		end
	end
end

if ARGV == []
	usage
	exit
end

snapshot_dim = nil

ARGV.each do |op|
	sop = op.split("=")
	$source_file 	= sop[1] 		if ["--vixml-file","-v"].include? sop[0]
	$snapshot_file 	= sop[1] 		if ["--snapshot-file","-s"].include? sop[0] 
	$output_file 	= sop[1] 		if ["--output-file","-o"].include? sop[0] 
	$snapshot_dim 	= sop[1] 		if sop[0] == "--snapshot-dimension"
	$output_file 	= sop[1] 		if sop[0] == "--output-file"
	if sop[0] == "--help"
		help
		exit
	end
	if sop[0] == "--version"
		puts "SCAPE ViXML Viewer. Version 0.9"
		puts "UPMC - LIP6"
		exit
	end
end

$cont=0
svg = ""
$struc = []
input_file = File.open($source_file)
doc = Nokogiri::XML(input_file)

document_node = doc.at("/XML/Document")

unless $snapshot_dim.nil? 
	d = $snapshot_dim.split("x").collect {|e| e.to_i}
	document_geometry = {'left'=>0, 'top'=>0, 'width'=>d[0], 'height'=>d[1]}
else
	document_geometry = parse_geometry(document_node)
end

svg += svg_header(document_geometry["width"],document_geometry["height"])

svg += svg_image 0, 0, document_geometry["width"], document_geometry["height"], $snapshot_file



traverse(doc.at("/XML/Document"),nil,0)

filtered = $struc.collect {|e| e if (['block','document'].include? e.tag.downcase) and (!e.children.collect{|c|c.tag.downcase}.include? 'block')}
filtered.delete(nil)
sortie = filtered.collect {|e| svg_polygon(parse_geometry(e.node),e.node['ref'])}

svg += sortie.join("")
svg += svg_footer

if $output_file.nil?
	puts svg
else
	File.open($output_file,'w') {|f| f.puts svg}
end
